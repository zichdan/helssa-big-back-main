"""
Django settings for helssa project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
# from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# load_dotenv()


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = os.getenv("SECRET_KEY", "django-insecure-test-key-for-development-only")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Third party apps
    'rest_framework',
    'django_ratelimit',
    'encrypted_model_fields',
    'rest_framework_simplejwt',
    'corsheaders',
    'rest_framework_simplejwt',
    # Local apps
    'chatbot',
    'api_gateway',
    'agent',
    'feedback',
    'unified_auth',
    'auth_otp',
    'billing',
    'triage',
    'auth_otp',
    'doctor',
    'patient',
    'rbac',
    'devops',
    'privacy',
    'adminportal',
    'analytics',
    'audit',
    'fhir_adapter',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    # Chatbot middlewares
    'chatbot.middleware.rate_limiting.ChatbotRateLimitMiddleware',
    'chatbot.middleware.rate_limiting.ChatbotSecurityMiddleware',
]

ROOT_URLCONF = 'helssa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'helssa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# FHIR Adapter Settings
FHIR_BASE_URL = os.getenv('FHIR_BASE_URL', 'http://localhost:8000/api/fhir/')
FHIR_VERSION = 'R4'
FHIR_VALIDATION_ENABLED = True
FHIR_STRICT_VALIDATION = False
FHIR_BUNDLE_MAX_SIZE = 100
FHIR_DEFAULT_PAGE_SIZE = 20
FHIR_MAX_PAGE_SIZE = 100
FHIR_LOG_RETENTION_DAYS = 30
FHIR_REQUIRE_AUTHENTICATION = True

# FHIR Code Systems
FHIR_CODE_SYSTEMS = {
    'condition': 'http://snomed.info/sct',
    'medication': 'http://www.nlm.nih.gov/research/umls/rxnorm',
    'procedure': 'http://www.ama-assn.org/go/cpt',
    'observation': 'http://loinc.org',
}

# FHIR Identifier Systems  
FHIR_IDENTIFIER_SYSTEMS = {
    'national_id': 'http://example.ir/nationalid',
    'medical_id': 'http://example.ir/medicalid',
    'phone': 'http://example.ir/phone',
    'email': 'http://example.ir/email'
}


# Analytics settings
ANALYTICS_ENABLED = True
ANALYTICS_PERFORMANCE_TRACKING_ENABLED = True
ANALYTICS_USER_ACTIVITY_TRACKING_ENABLED = True
ANALYTICS_ALERTS_ENABLED = True
ANALYTICS_METRICS_RETENTION_DAYS = 30
ANALYTICS_USER_ACTIVITY_RETENTION_DAYS = 90
ANALYTICS_PERFORMANCE_RETENTION_DAYS = 30





# استفاده از کاربر سفارشی
AUTH_USER_MODEL = 'api_gateway.UnifiedUser'


# ===================================================
# FEEDBACK APP SETTINGS
# ===================================================

# تنظیمات امتیازدهی
FEEDBACK_RATING_SETTINGS = {
    'ENABLED': True,
    'SCALE_MAX': 5,
    'REQUIRED_FIELDS': ['overall_rating'],
    'ALLOW_EDIT': True,
    'EDIT_TIME_LIMIT': 24 * 60,  # 24 ساعت بر حسب دقیقه
}

# تنظیمات بازخورد پیام
FEEDBACK_MESSAGE_SETTINGS = {
    'ENABLED': True,
    'VOICE_FEEDBACK_ENABLED': True,
    'MAX_TEXT_LENGTH': 500,
    'SENTIMENT_ANALYSIS_ENABLED': True,
    'AUTO_FOLLOWUP_ENABLED': True,
}

# تنظیمات نظرسنجی
FEEDBACK_SURVEY_SETTINGS = {
    'ENABLED': True,
    'ANONYMOUS_ALLOWED': False,
    'MAX_QUESTIONS': 20,
    'AUTO_ACTIVATION': True,
    'COMPLETION_TRACKING': True,
}

# تنظیمات اعلان‌ها
FEEDBACK_NOTIFICATION_SETTINGS = {
    'ENABLED': True,
    'EMAIL_NOTIFICATIONS': False,
    'SMS_NOTIFICATIONS': True,
    'ADMIN_NOTIFICATIONS': True,
    'LOW_RATING_THRESHOLD': 2,  # امتیاز پایین که نیاز به اعلان دارد
}

# تنظیمات آنالیتیک
FEEDBACK_ANALYTICS_SETTINGS = {
    'ENABLED': True,
    'REAL_TIME_STATS': True,
    'EXPORT_ENABLED': True,
    'RETENTION_DAYS': 365,  # نگهداری داده‌ها
}

# تنظیمات فایل‌های صوتی
FEEDBACK_AUDIO_SETTINGS = {
    'SUPPORTED_FORMATS': ['wav', 'mp3', 'webm', 'ogg'],
    'MAX_FILE_SIZE': 10 * 1024 * 1024,  # 10MB
    'MAX_DURATION': 300,  # 5 دقیقه
    'AUTO_TRANSCRIPTION': True,
}



# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',


    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],

    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

# CORS Settings
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:8080",
    "http://127.0.0.1:8080",
]

CORS_ALLOW_CREDENTIALS = True

# Caching
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'chatbot-cache',
    }
}

# Logging


    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_FILTER_BACKENDS': [
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],

    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler',
}

# تنظیمات Logging





from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,

    'UPDATE_LAST_LOGIN': False,
    
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    
    'JTI_CLAIM': 'jti',
}

# AdminPortal specific settings
ADMINPORTAL_ENABLED = os.getenv("ADMINPORTAL_ENABLED", True)
ADMINPORTAL_DEBUG = os.getenv("ADMINPORTAL_DEBUG", DEBUG)
ADMINPORTAL_LOG_LEVEL = os.getenv("ADMINPORTAL_LOG_LEVEL", "INFO")
ADMINPORTAL_REQUIRE_HTTPS = os.getenv("ADMINPORTAL_REQUIRE_HTTPS", False)

# Internationalization for Persian
LANGUAGE_CODE = 'fa-ir'
TIME_ZONE = 'Asia/Tehran'
USE_I18N = True
USE_TZ = True

    




# Cache Configuration
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

# Logging Configuration

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',

            'filename': 'chatbot.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO',


            'filename': 'logs/feedback.log',


            'filename': 'logs/adminportal.log',

            'filename': 'logs/patient.log',
          
        

            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',

            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {

      
        'chatbot': {
            'handlers': ['file', 'console'],
            'level': 'INFO',


        'feedback': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',


        'adminportal': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django': {

        'patient': {

            'handlers': ['file', 'console'],
            'level': 'INFO',


            'propagate': True,
        },
    },
}


# Chatbot Settings
CHATBOT_SETTINGS = {
    # تنظیمات عمومی
    'DEFAULT_SESSION_TIMEOUT': 3600,  # 1 ساعت
    'MAX_MESSAGE_LENGTH': 4000,
    'ENABLE_RATE_LIMITING': True,
    'AI_CONFIDENCE_THRESHOLD': 0.7,
    
    # تنظیمات چت‌بات بیمار
    'PATIENT_CHATBOT': {
        'ENABLE_SYMPTOM_ASSESSMENT': True,
        'ENABLE_APPOINTMENT_BOOKING': True,
        'MAX_DAILY_SESSIONS': 10,
        'SESSION_TIMEOUT': 1800,  # 30 دقیقه
        'GREETING_MESSAGE': 'سلام! من دستیار هوشمند هلسا هستم. چطور می‌توانم کمکتان کنم؟',
    },
    
    # تنظیمات چت‌بات پزشک
    'DOCTOR_CHATBOT': {
        'ENABLE_DIAGNOSIS_SUPPORT': True,
        'ENABLE_TREATMENT_PROTOCOLS': True,
        'ENABLE_DRUG_INTERACTIONS': True,
        'MAX_DAILY_SESSIONS': 50,
        'SESSION_TIMEOUT': 3600,  # 1 ساعت
        'GREETING_MESSAGE': 'سلام دکتر! من دستیار هوشمند پزشکی هلسا هستم.',
    },
}







# Patient App Specific Settings
PATIENT_SETTINGS = {
    'AUTO_GENERATE_MEDICAL_RECORD_NUMBER': True,
    'ENABLE_MEDICAL_TEXT_PROCESSING': True,
    'ENABLE_SPEECH_PROCESSING': True,
    'MAX_AUDIO_FILE_SIZE_MB': 50,
    'CACHE_TIMEOUT_SECONDS': 300,
}

# STT Configuration (Optional)
# OPENAI_API_KEY = 'your-openai-api-key'
# LOCAL_STT_URL = 'http://localhost:8000'

# Custom User Model
AUTH_USER_MODEL = 'rbac.UnifiedUser'
